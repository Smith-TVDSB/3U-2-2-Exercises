// Test definitions. Do NOT edit this file!

#include <tuple>

#define CATCH_CONFIG_MAIN // defines main() automatically
#include "catch.hpp"
#include <string>

#include "student.hpp" // student implementations

// =====================
// tests for exercise 1
// ---------------------

TEST_CASE("Ex1", "[example]") //Named ExerciseOne, tagged with example
{
    
    //TODO: Set up tests
    CHECK(exerciseOne("agent")==10); 
    CHECK(exerciseOne("agents")==0);
    REQUIRE(exerciseOne("AGENTs of oaks")==0);
        
}

TEST_CASE("Ex2")
{
    //Checks if 100 is a pass
    std::string result = exerciseTwo(100);
    //Converts the return value to lowercase to make it not case sensitive
    std::for_each(result.begin(),result.end(),[] (char & c){
    c= ::tolower(c);
    });
    CHECK(result=="passed");

    //Checks if 50 is a pass
    result = exerciseTwo(50);
    std::for_each(result.begin(),result.end(),[] (char & c){
    c= ::tolower(c);
    });
    CHECK(result=="passed");

    //Checks if 49 is not a pass
    result = exerciseTwo(49);
    std::for_each(result.begin(),result.end(),[] (char & c){
    c= ::tolower(c);
    });
    CHECK(result!="passed");
}

TEST_CASE("Ex3")
{
    //Checks if 33 is a fizz
    std::string result = exerciseThree(33);
    std::for_each(result.begin(),result.end(),[] (char & c){
    c= ::tolower(c);
    });
    CHECK(result=="fizz");

    //Checks if 125 is a buzz
    result = exerciseThree(125);
    std::for_each(result.begin(),result.end(),[] (char & c){
    c= ::tolower(c);
    });
    CHECK(result=="buzz");

    //Checks if 105 is a fizzbuzz
    result = exerciseThree(105);
    std::for_each(result.begin(),result.end(),[] (char & c){
    c= ::tolower(c);
    });
    CHECK(result=="fizzbuzz");

    //Checks if 77 is a number
    result = exerciseThree(77);
    CHECK(result=="77");

    //Checks if 91 is a number
    result = exerciseThree(91);
    CHECK(result=="91");

    //Checks if 254 is a number
    result = exerciseThree(254);
    CHECK(result=="254");
}
